(function($){"use strict";var cache={},index=1,tpl='<div class="select-box"><div class="select-box-inner"><div class="v-align"><input type="text" class="select-text" /></div></div><dl></dl></div>',defaults={dataKey:[],style:{},keys:{text:"text",value:"id"},placeholder:null,options:null,combo:false,clearTextOnFocus:false,hideArrowOnDisabled:false,toggleArrowOnOpened:false,onInput:null,filter:null,filtered:null,filterItem:null,formatter:null,create:null,change:null,disabled:false,noBorder:false,maxHeight:null,autoCopyStyle:true},proto={init:function(instance){var _self=this,config=instance.config,create=config.create;_self.create(instance);_self.unbindEvent(instance);if(!config.disabled){_self.bindEvent(instance)}if(create&&typeof create==="function"){create.call(instance,_self.getSelected(instance))}return _self.getMethods(instance)},change:function(instance,option,oldOption){var config=instance.config,keys=config.keys;if(instance.originSelectSource){var node=config.node,optionEl=node.find('option[value="'+option[keys.value]+'"]'),oldOptionEl=node.find('option[value="'+oldOption[keys.value]+'"]');if(optionEl.length){optionEl.attr("selected","selected").prop("selected",true)}if(oldOptionEl.length){oldOptionEl.removeAttr("selected").prop("selected",false)}node.trigger("change")}if(config.combo&&config.onInput){config.onInput.call(instance,this.getSelected(instance))}if(typeof config.change==="function"){config.change.call(instance,option)}},getSelected:function(instance){var config=instance.config,options=config.options||[],keys=config.keys,text=instance.text&&instance.text.val(),selectedIndex=instance.selected?instance.selected.data("select-index"):0,option=options[selectedIndex];if(config.combo){if(option&&option[keys.text]===text){option.custom=false;return option}else{var tmpOption={};tmpOption[keys.text]=text;tmpOption[keys.value]="";tmpOption.selected=true;tmpOption.custom=true;return tmpOption}}else{return option}},setSelected:function(instance,selected){if(!selected.jquery){selected=instance.wrap.find('dd[data-id="'+selected+'"]')}if(!selected.length){return false}var _self=this,config=instance.config,isGroup=config.isGroup,options=isGroup?config.options:[{options:config.options}],text=selected.text(),groupIndex=selected.data("group-index"),index=selected.data("select-index"),group=options[groupIndex],option=group.options&&group.options[index]||{},oldOption=null;selected.addClass("on");if(instance.selected){instance.selected.removeClass("on");var oldGroupIndex=instance.selected.data("group-index"),oldIndex=instance.selected.data("select-index"),oldGroup=options[oldGroupIndex];oldOption=oldGroup.options&&oldGroup.options[oldIndex]||{};if(oldOption){oldOption.selected=false}}option.selected=true;instance.selected=selected;if(config.formatter){text=config.formatter(text)}instance.text.val(text).attr("value",text);_self.change(instance,option,oldOption);return true},unbindEvent:function(instance){var wrap=instance.wrap,config=instance.config;if(wrap){if(config.hideArrowOnDisabled){wrap.addClass("hide-arrow")}wrap.addClass("disabled");wrap.off("click")}},bindEvent:function(instance){var _self=this,wrap=instance.wrap,config=instance.config;if(wrap){wrap.removeClass("disabled");if(config.hideArrowOnDisabled){wrap.removeClass("hide-arrow")}if(config.combo&&config.onInput){wrap.on("input propertychange",".select-text",function(){config.onInput.call(instance,_self.getSelected(instance))})}wrap.on("click",".select-box-inner",function(e){if(wrap.hasClass("open")){wrap.removeClass("open")}else{if(cache.wrap){cache.wrap.removeClass("open")}cache.wrap=instance.wrap;if(config.filterItem){_self._setOptions(instance)}wrap.addClass("open");if(config.combo&&config.clearTextOnFocus){var $target=$(e.target);if($target.is(".select-text")){$target.val("");wrap.removeClass("open")}}}});wrap.on("click","dd",function(){var selectedEl=$(this);if(!selectedEl.hasClass("on")){_self.setSelected(instance,selectedEl)}wrap.removeClass("open")});_self._preventScroll(instance.listWrap);if(!cache.selectEventProxy){cache.selectEventProxy=true;$(document).on("click",function(e){var target=$(e.target);if(!target.is(".select-box")&&!target.closest(".select-box").length){$(".select-box").removeClass("open")}})}}},getBoxId:function(node){var boxId=node.data("select-box-id");if(node&&!boxId){boxId="select_"+index++;node.attr("data-select-box-id",boxId);return boxId}return boxId},create:function(instance){var _self=this,config=instance.config,$node=config.node,options=config.options=config.options||[];var isOrigin=_self._parseOptions(instance,config,options);if(isOrigin&&typeof config.disabled==="undefined"){config.disabled=$node.prop("disabled")||$node.attr("disabled")||$node.attr("readonly")}instance.wrap=_self.createWrap($node,isOrigin||!$node.is("div"),config);instance.listWrap=instance.wrap.find("dl");instance.wrap.css(config.style);if(config.maxHeight){instance.listWrap.css({maxHeight:config.maxHeight})}if(config.isGroup){instance.listWrap.addClass("group")}instance.text=instance.wrap.find(".select-text");instance.text.attr("readonly",!config.combo);if(config.noBorder){instance.wrap.find(".select-box-inner").css({borderColor:"transparent"})}_self._setOptions(instance,true)},fetch:function(dataKey,keys,fn){if(dataKey&&dataKey.length&&fn){for(var i=0;i<dataKey.length;i++){var key=dataKey[i];if(key&&!keys[key]){fn(key)}}}},createWrap:function($node,isOrigin,config){var wrap=$node;if(isOrigin){wrap=$node.prev("div.select-box");if(!wrap.length){if(config.autoCopyStyle){var style={width:$node.css("width"),marginLeft:$node.css("marginLeft"),marginRight:$node.css("marginRight"),marginTop:$node.css("marginTop"),marginBottom:$node.css("marginBottom"),display:$node.css("display"),"float":$node.css("float")};config.style=$.extend(true,{},style,config.style)}wrap=$(tpl);$node.before(wrap);$node.hide()}}else{if(!$node.hasClass("select-box")){$node.addClass("select-box")}if(!$node.find(".select-box-inner").length||!$node.find("dl").length){$node.html('<div class="select-box-inner"><div class="v-align"><input type="text" class="select-text" /></div></div><dl></dl>')}}if(config.combo){wrap.addClass("combo")}if(config.toggleArrowOnOpened){wrap.addClass("toggle")}return wrap},_parseOptions:function(instance,config,options){var _self=this,$node=config.node,keys=config.keys,isOrigin=false,isGroup=false,ddSource=false,originSelectSource=false;if(options.length){isGroup=!!options[0].label&&!options[0][keys.text]&&!options[0][keys.value]}else{if($node.is("select")){$node.css("visibility","hidden");var group=$node.find("optgroup");isGroup=group.length;if(!isGroup){group=group.add($node)}group.each(function(idx){var groupEl=group.eq(idx),groupOptions=isGroup?[]:options,optionEls=groupEl.find("option");optionEls.each(function(i){var option={},optionEl=optionEls.eq(i);option[keys.text]=optionEl.text();option[keys.value]=optionEl.attr("value")||"";option.selected=optionEl.prop("selected");_self.fetch(config.dataKey,keys,function(key){option[key]=optionEl.data(key)||$node.data(key)});groupOptions.push(option)});if(isGroup){options.push({label:groupEl.attr("label"),options:groupOptions})}});originSelectSource=true;isOrigin=true}else{var dl=$node.find("dl");isGroup=dl.length>1;if(dl.length){dl.each(function(idx){var groupEl=dl.eq(idx),groupOptions=isGroup?[]:options,dd=groupEl.find("dd");dd.each(function(i){var option={},optionEl=dd.eq(i);option[keys.text]=optionEl.text();option[keys.value]=optionEl.data(keys.value)||"";option.selected=!!optionEl.data("selected");_self.fetch(config.dataKey,keys,function(key){option[key]=optionEl.data(key)||$node.data(key)});groupOptions.push(option)});if(isGroup){options.push({label:groupEl.data("label"),options:groupOptions})}});ddSource=true}}}instance.originSelectSource=originSelectSource;instance.domSource=ddSource||originSelectSource;config.isGroup=isGroup;return isOrigin},_setPlaceholder:function(config,options,hidePlaceholder){if(config.placeholder){var keys=config.keys,placeholder={};if(options[0].placeholder){options.shift()}if(!hidePlaceholder&&options.length&&options[0][keys.text]!==config.placeholder){placeholder[keys.text]=config.placeholder;placeholder[keys.value]="";placeholder.selected=false;placeholder.placeholder=true;options.splice(0,0,placeholder)}}},_showSelected:function(instance){var config=instance.config,selected=instance.wrap.find("dd.on");if(!selected.length){selected=instance.wrap.find("dd:eq(0)").addClass("on")}var text=selected.text();if(config.formatter){text=config.formatter(text)}instance.selected=selected;instance.text.val(text).attr("value",text)},_setOptions:function(instance,isFilter,hidePlaceholder){var config=instance.config,options=config.options,hasSelect=false,keys=config.keys;if(isFilter&&config.filter&&typeof config.filter==="function"){options=config.options=config.filter(options)}this._setPlaceholder(config,options,hidePlaceholder);for(var i=0;i<options.length;i++){if(options[i].selected){hasSelect=true;break}}if(!hasSelect&&options[0]){options[0].selected=true}var html=this._getOptionsHtml(config.isGroup,options,keys,config.filterItem);instance.listWrap.html(html);this._showSelected(instance);if(config.filtered){config.filtered.call(instance,options)}},_getOptionHtml:function(option,keys,index,groupIndex){return'<dd data-group-index="'+(groupIndex||0)+'" data-select-index="'+index+'" data-id="'+option[keys.value]+'"'+(option.selected?' class="on"':"")+">"+option[keys.text]+"</dd>"},_getOptionsHtml:function(isGroup,groupOptions,keys,filterItem){var optionHtml=[];if(groupOptions&&groupOptions.length){var optionsArray=[{options:groupOptions}];if(isGroup){optionsArray=groupOptions}for(var idx=0;idx<optionsArray.length;idx++){var optionsObj=optionsArray[idx];if(isGroup){optionHtml.push("<dt>"+(optionsObj.label||idx+1)+"</dt>")}var options=optionsObj.options;if(filterItem){for(var f=0;f<options.length;f++){var item=options[f];item.is_valid=filterItem(item);if(item.is_valid){optionHtml.push(this._getOptionHtml(item,keys,f,idx))}}}else{for(var i=0;i<options.length;i++){optionHtml.push(this._getOptionHtml(options[i],keys,i,idx))}}}}return optionHtml.join("")},_preventScroll:function(dom){var $dom=dom.jquery?dom:$(dom);dom=$dom.get(0);if(!$dom.data("mouse-wheel")){$dom.attr("data-mouse-wheel",1);if(navigator.userAgent.indexOf("Firefox")>=0){dom.addEventListener("DOMMouseScroll",function(e){dom.scrollTop+=e.detail>0?60:-60;e.preventDefault()},false)}else{dom.onmousewheel=function(e){e=e||window.event;dom.scrollTop+=e.wheelDelta>0?-60:60;return false}}}},setOptions:function(instance,options,isFilter,hidePlaceholder){var config=instance.config;instance.originSelectSource=false;if(options){delete config.options;config.options=options}delete instance.selected;this._setOptions(instance,isFilter,hidePlaceholder)},getMethods:function(instance){var _self=this,config=instance.config,methods={};methods.setConfig=function(config){$.extend(true,instance.config,config);methods.refresh()};methods.val=function(val){if(val){return _self.setSelected(instance,val)}else{return _self.getSelected(instance)}};methods.setOptions=function(options,isFilter,hidePlaceholder){_self.setOptions(instance,options,isFilter,hidePlaceholder)};methods.refresh=function(){var options=config.options;for(var i=0;i<options.length;i++){if(options[i].selected){options[i].selected=false}}delete instance.selected;if(instance.originSelectSource){delete config.options}_self.init(instance)};methods.disable=function(){if(!config.disabled){config.disabled=true;_self.unbindEvent(instance);if(config.combo){instance.text.attr("readonly","readonly")}}};methods.enable=function(){if(config.disabled){config.disabled=false;_self.bindEvent(instance);if(config.hideArrowOnDisabled){instance.wrap.removeClass("hide-arrow")}if(config.combo){instance.text.removeAttr("readonly")}}};methods.destroy=function(){_self.unbindEvent(instance);var boxId=_self.getBoxId(instance.config.node);if(instance.originSelectSource){instance.wrap.next().css("visibility","visible").show();instance.wrap.remove()}delete cache[boxId]};return methods}};var SelectBox=function(node,config){this.config=$.extend(true,{node:$(node)},defaults,config);return proto.init(this)};$.fn.extend({selectBox:function(config){var node=this.eq(0),boxId=proto.getBoxId(node);if(cache[boxId]){cache[boxId].setConfig(config)}else{cache[boxId]=new SelectBox(node,config)}return cache[boxId]},selectBoxs:function(){var args=Array.prototype.slice.apply(arguments),config=args.shift();if($.type(config)==="string"){var callback=$.type(args[args.length-1])==="function"?args.pop():function(){};return this.each(function(){var instance=$(this).selectBox();if(instance&&instance[config]){callback.call(instance,instance[config].apply(this,args))}})}return this.each(function(){$(this).selectBox($.extend(true,{},config))})}})})(jQuery);